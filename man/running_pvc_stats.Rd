% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/running_pvc_stats.R
\name{running_pvc_stats}
\alias{running_pvc_stats}
\title{Calculate running PVC burden and HR}
\usage{
running_pvc_stats(
  times,
  peaks,
  pvc,
  omit_segments = NULL,
  window = 480,
  at = NULL,
  n_at = 240,
  cores = 1,
  tz = Sys.timezone()
)
}
\arguments{
\item{times}{Vector of times (integers as from Polar H10, datetimes, or character strings)}

\item{peaks}{Vector of peak indices as integers from 1 to \code{length(times)}}

\item{pvc}{Vector of boolean indicators of whether the peaks are PVC or not.
Should be the same length as \code{peaks}.}

\item{omit_segments}{Segments to be ignored in analysis, as a data frame with
two columns: the start and end index for each interval to be ignored}

\item{window}{Window in seconds to calculate the running statistics}

\item{at}{Times at which to calculate the running statistics.}

\item{n_at}{If \code{at} is not provided, we use this number of
equally-spaced values across the range of \code{times}.}

\item{cores}{Number of CPU cores to use, for parallel calculations.
(If \code{0}, use \code{\link[parallel:detectCores]{parallel::detectCores()}}.)
Alternatively, this can be links to a set of cluster sockets, as
produced by \code{\link[parallel:makeCluster]{parallel::makeCluster()}}.}

\item{tz}{Timezone (in converting times)}
}
\value{
Data frame with window centers, PVC percent, heart rate (in
beats per minute), and window length (in seconds). The window
centers may be different from \code{at} in cases where windows is
missing data.
}
\description{
Calculate running PVC burden percent and heart rate in sliding windows
}
\examples{
data(polar_h10)
bad_segs <- find_bad_segments(polar_h10$time, polar_h10$ecg)
peaks <- detect_peaks(polar_h10$ecg, omit_segments=bad_segs)
peak_stats <- calc_peak_stats(polar_h10$time, polar_h10$ecg, peaks, omit_segments=bad_segs)
pvc <- (peak_stats$RStime > 50)

pvc_stats <- running_pvc_stats(polar_h10$time, peaks, pvc, window=60, n_at=15,
                               omit_segments=bad_segs)
plot(pvc_stats)
}
